@startuml
actor User
participant Frontend
activate Frontend
note over Frontend: On Login page
User -> Frontend: Fill login credentials
User -> Frontend: Click login button
alt Is there an empty field?
    note over Frontend: Display alert message
else
    activate Backend
    Frontend -> Backend: Send user credentials
end
alt valid credentials?
    Backend -> DB: Request User
    activate DB
    DB --> Backend: Return User
    Backend --> Frontend: Send AuthenticationResponse
else
    Backend --> Frontend: Send status 403
    note over Frontend: Console log error
    
    note over Frontend
    Load empty login page
    end note
end

note over Frontend: Redirect to Highligt page
alt Is User not logged in?
    note over Frontend: Redirect to Login page
end

Frontend -> Backend: Request user's analytics
Backend -> DB: Request user's total duration overall
DB --> Backend: Return user's total duration overall
Backend -> DB: Request user's total duration for today
DB --> Backend: Return user's total duration for today
Backend -> DB: Request user's last week total duration
DB --> Backend: Return user's last week total duration
Backend -> DB: Request user's current week total duration
DB --> Backend: Return user's current week total duration
Backend --> Frontend: Return HightlightDTO

note over Frontend: Display Highlight page

User -> Frontend: Click Task navigation bar item
note over Frontend: Redirect to Task page

alt Is User not logged in?
    note over Frontend: Redirect to Login page
end

Frontend -> Backend: Request a user's tasks
Backend -> DB: Request a user's tasks
DB --> Backend: Return a user's tasks
Backend --> Frontend: Return List<TaskDTO>
note over Frontend: Display Task page

User -> Frontend: Click New button
note over Frontend: Redirect to New Task Page
User -> Frontend: Fill new task title field
User -> Frontend: Click Save button

alt Is new task title field empty?
    note over Frontend: Display alert message
else
    Frontend -> Backend: Request new task creation
    alt Does task exist?
        note over Backend: Throw TaskAlreadyExistException
    else
        Backend -> DB: Request User
        DB --> Backend: Return User
        Backend -> DB: Save new task
    end
    Backend --> Frontend: Return status 200
end
note over Frontend: Redirect to Task page

User -> Frontend: Click Update button
note over Frontend: Redirect to Update Task Page
User -> Frontend: Modify Task title
User -> Frontend: Modify Task state
User -> Frontend: Click Update button
alt Is the task title empty?
    note over Frontend: Display alert message
else
    Frontend -> Backend: Request update task
    alt Does task exist?
        note over Backend: Update task
        Backend -> DB: Save task request
    else
        note over Backend: Throw TaskNotFoundException
    end
    Backend --> Frontend: Return status 200
end
note over Frontend: Redirect to Task page

User -> Frontend: Click New Session button
note over Frontend: Redirect to New Session Page
User -> Frontend: Fill duration fields
User -> Frontend: Fill date field
User -> Frontend: Fill comment field
User -> Frontend: Click Save button
alt Is session comment or day or month or year or duration or taskId empty?
    note over Frontend: Display alert message to fill all fields
else Is session comment more than 255 characters?
    note over Frontend: Display alert message to rewrite the comment
else 
    Frontend -> Backend: Send session creation request
    alt Does task exist?
        note over Backend: Create session
        Backend -> DB: Save session

        Backend -> DB: Request user's total duration overall
        Backend <-- DB: Return user's total duration overall     
        alt Is total duration overall null?
            note over Backend: Create total duration overall
            Backend -> DB: Save total duration overall
        else 
            note over Backend: Increase total duration overall
            Backend -> DB: Save total duration overall
        end

        Backend -> DB: Request user's total duration per day
        Backend <-- DB: Return user's total duration per day     
        alt Is total duration per day null?
            note over Backend: Create total duration per day
            Backend -> DB: Save total duration per day
        else 
            note over Backend: Increase total duration per day
            Backend -> DB: Save total duration per day
        end

        Backend -> DB: Request user's total duration per week
        Backend <-- DB: Return user's total duration per week     
        alt Is total duration per week null?
            note over Backend: Create total duration per week
            Backend -> DB: Save total duration per week
        else 
            note over Backend: Increase total duration per week
            Backend -> DB: Save total duration per week
        end
        
        note over Backend: Increase task duration
        Backend -> DB: Save task
    else 
        note over Backend: Throw TaskNotFoundException
    end
    Backend --> Frontend: Send status 200
end
note over Frontend: Redirect to Task page

User -> Frontend: Click List Sessions button
note over Frontend: Redirect List Sessions Page
alt Is User not logged in?
    note over Frontend: Redirect to Login page
end
Frontend -> Backend: Request a task sessions
Backend -> DB: Request a task sessions
Backend <-- DB: Return a task sessions
Backend --> Frontend: Return List<SessionDTO>
note over Frontend: Display List Sessions Page
User -> Frontend: Click Delete button
Frontend -> Backend: Request session deletion
Backend -> DB: Request Session
DB --> Backend: Return Session

alt Does session exist?
    alt Does task exist?
        Backend -> DB: Request Task
        DB --> Backend: Return Task
 
        Backend -> DB: Request User total duration overall
        DB --> Backend: Return User total duration overall
        note over Backend: Decrease total Duration overall
        Backend -> DB: Save total duration overall

        Backend -> DB: Request User total duration per day
        DB --> Backend: Return User total duration per day
        note over Backend: Decrease total Duration per day
        Backend -> DB: Save total duration per day

        note over Backend: Calculate beginning and end of week
        Backend -> DB: Request User total duration per week
        DB --> Backend: Return User total duration per week
        note over Backend: Decrease total Duration per week
        Backend -> DB: Save total duration per week

        note over Backend: Decrease task total duration
        Backend -> DB: Save task total duration 
        
    else
        note over Backend: Throw TaskNotFoundException
    end

else 
    note over Backend: Throw RuntimeException("Session does not exist"))
end

Backend --> Frontend: Send status 200
note over Frontend: Redirect to Task Page

User -> Frontend: Click navigation bar item Profile
note over Frontend: Redirect to Profile page
alt Is User not logged in?
    note over Frontend: Redirect to Login page
else

Frontend -> Backend: Request User information
Backend -> DB: Request User information
Backend <-- DB: Return User information
Backend --> Frontend: Return UserResponse
note over Frontend: Display Profile page
end

User -> Frontend: Click navigation bar item Logout
note over Frontend: Redirect to Login Page

User -> Frontend: Click Forgot your password link
note over Frontend: Redirect to Forgot your password page
User -> Frontend: Fill email field
User -> Frontend: Click Send reset link button
alt Is email field empty?
    note over Frontend: Display alert message to fill form
else
    Frontend -> Backend: Send forgot password request
    Backend -> DB: Request User
    DB -> Backend: Return User
    
    alt Does User exist?
        note over Backend: Generate reset token
        Backend -> DB: Save reset token
        note over Backend: Create email
        Backend -> Email: Send email
        activate Email
        Backend --> Frontend: Return status 200
    else 
        note over Backend: Throw UserNotFoundException
    end
    note over Frontend: Display alert message to check email
end
User -> Email: Click reset link
deactivate Email
note over Frontend: Redirect to Reset Password Page
User -> Frontend: Fill password field
User -> Frontend: Fill confirm password field
User -> Frontend: Click Reset button
alt Is password or confirm password empty?
    note over Frontend: Display alert message to fill all fields
else Is password different from confirm password?
    note over Frontend: Display alert message password do not match
else 
    Frontend -> Backend: Send reset password request
    Backend -> DB: Request reset password token
    Backend <-- DB: Return reset password token
    
    alt Does password token exist?
        alt Has the token expired?
            note over Backend:Throw RuntimeException("Token has expired")
        else
            Backend -> DB: Request User
            DB -> Backend: Return User
            
            alt Does User exist?
                note over Backend: Update Password
                Backend -> DB: Delete token request
                Backend --> Frontend: Send 200 status
            else
                note over Backend: Throw UserNotFoundException 
            end 
        end 
    else
        note over Backend: Throw RuntimeException("Token not found")
    end
end

note over Frontend: On Login Page
User -> Frontend: Click Sign up link
note over Frontend: Redirect to Sign Up page
User -> Frontend: Fill form fields
User -> Frontend: Click Save button
alt Is any field empty?
    note over Frontend: Display alert message to fill all form fields
else Is email invalid?
    note over Frontend: Display alert message to enter a valid email
else Is password and confirm password different?
    note over Frontend: Display alert message that passwords do not match
else
    Frontend -> Backend: Send register user request
    
    alt Does user exist?
        note over Backend: Throw UserAlreadyExistException
    else
        note over Backend: Create User
        Backend -> DB: Save User
        Backend --> Frontend: Send 200 status
    end 
end
deactivate Backend
deactivate Backend
deactivate Frontend
@enduml